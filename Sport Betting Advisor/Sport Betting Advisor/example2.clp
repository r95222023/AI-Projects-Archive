(batch "facts.clp")
;;;**********************
;;; In this examples, I will show how invalid Bet or Preference is filtered out. 
;;; Those testing rule can be found at "Bet Rules" and "Preference Rules" in rules.clp 
;;; I changed specific slots to an invalid value, we can see how those invalid facts
;;; by uncommenting (fact) berfore and after (run) below.
;;;**********************
(assert (Preference (pid pref-correct)
        			(sport NFL)
    			    (bet-type Straight-Wagers)
    			   	(bet-type-arg-1 Win)
    			   	(bet-type-arg-2 Empty)
    			   	(currency USD)
    			   	(country USA)
    			   	(time-start (- (time) 100000))
    			   	(time-end (+ (time) 100000))
    			   	(risk-bound-high 0.01)
    			   	(risk-bound-mid  0.5)
    			   	(risk-bound-low  1.01)
    			   	(portion-high 0.1)
			       	(portion-mid 0.3)
        			(portion-low 0.6)
    			   	(payment-method Paypal)
    			   	(bet-amount 100)
    			   	(provider Bet365)))

(assert (Preference (pid pref-wrong-sprot)
        			(sport ABC)
    			    (bet-type Straight-Wagers)
    			   	(bet-type-arg-1 Win)
    			   	(bet-type-arg-2 Empty)
    			   	(currency USD)
    			   	(country USA)
    			   	(time-start (- (time) 100000))
    			   	(time-end (+ (time) 100000))
    			   	(risk-bound-high 0.01)
    			   	(risk-bound-mid  0.5)
    			   	(risk-bound-low  1.01)
    			   	(portion-high 0.1)
			       	(portion-mid 0.3)
        			(portion-low 0.6)
    			   	(payment-method Paypal)
        			(bet-amount 100)	
    			   	(provider Bet365)))

(assert (Preference (pid pref-wrong-provider)
        			(sport NFL)
    			    (bet-type Straight-Wagers)
    			   	(bet-type-arg-1 Win)
    			   	(bet-type-arg-2 Empty)
    			   	(currency USD)
    			   	(country USA)
    			   	(time-start (- (time) 100000))
    			   	(time-end (+ (time) 100000))
    			   	(risk-bound-high 0.01)
    			   	(risk-bound-mid  0.5)
    			   	(risk-bound-low  1.01)
    			   	(portion-high 0.1)
			       	(portion-mid 0.3)
        			(portion-low 0.6)
    			   	(payment-method Paypal)
        			(bet-amount 100)	
    			   	(provider Notexist)))

(assert (Preference (pid pref-wrong-time)
        			(sport NFL)
    			    (bet-type Straight-Wagers)
    			   	(bet-type-arg-1 Win)
    			   	(bet-type-arg-2 Empty)
    			   	(currency USD)
    			   	(country USA)
    			   	(time-start (- (time) 100000))
    			   	(time-end (- (time) 100000))
    			   	(risk-bound-high 0.01)
    			   	(risk-bound-mid  0.5)
    			   	(risk-bound-low  1.01)
    			   	(portion-high 0.1)
			       	(portion-mid 0.3)
        			(portion-low 0.6)
    			   	(payment-method Paypal)
        			(bet-amount 100)	
    			   	(provider Bet365)))

(assert (Preference (pid pref-wrong-country)
        			(sport NFL)
    			    (bet-type Straight-Wagers)
    			   	(bet-type-arg-1 Win)
    			   	(bet-type-arg-2 Empty)
    			   	(currency USD)
    			   	(country ITA)
    			   	(time-start (- (time) 100000))
    			   	(time-end (+ (time) 100000))
    			   	(risk-bound-high 0.01)
    			   	(risk-bound-mid  0.5)
    			   	(risk-bound-low  1.01)
    			   	(portion-high 0.1)
			       	(portion-mid 0.3)
        			(portion-low 0.6)
    			   	(payment-method Paypal)
        			(bet-amount 100)	
    			   	(provider Bet365)))

;;;**********************
;;; Similar check is applied to Bet
;;;**********************
(assert (Bet (bid bet1)
    		(sport NFL) 
    		(bet-type Straight-Wagers)
    		(bet-type-arg-1 Win)
     		(bet-type-arg-2 Empty)
    		(odds 1.85)
    		(winning-rate 0.6)
    		(timeslot-start (- (time) 200000))
 			(timeslot-end (+ (time) 200000))
    		(currency USD)
    		(fee 0.01)
    		(min-amount 50)
    		(max-amount 10000)
    		(provider Bet365)))
;;------
;; Notice that the result shows 'suggested bet abmount = nil' for bet1
;; This is due to the large min-amount, since it will make suggested amount = portion*amount still smaller then 
;; the given min-amount. User have to increase their bet amount so they can bet on this one.  
;;-------

(assert (Bet (bid bet-wrong-type)
    		(sport NFL) 
    		(bet-type Notexist)
    		(bet-type-arg-1 Lose)
     		(bet-type-arg-2 Empty)
    		(odds 2.5)
    		(winning-rate 0.1)
    		(timeslot-start (- (time) 200000))
 			(timeslot-end (+ (time) 200000))
    		(currency USD)
    		(fee 0.01)
    		(min-amount 5)
    		(max-amount 10000)
    		(provider Bet365)))
------------------
;;; Uncomment to see how facts are changed before and after (run)
------------------
;(facts)
(run)
;(facts)
